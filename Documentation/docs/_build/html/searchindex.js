Search.setIndex({"docnames": ["brian", "brian.audio", "brian.motors", "brian.motors.motor_limits", "brian.motors.motor_port_probe", "brian.motors.motor_types", "brian.runtime", "brian.sensors", "brian.sensors.EV3", "brian.sensors.HiTec", "brian.sensors.NXT", "brian.sensors.sensor_port_probe", "brian.settings", "brian.uicontrol", "index", "modules"], "filenames": ["brian.rst", "brian.audio.rst", "brian.motors.rst", "brian.motors.motor_limits.rst", "brian.motors.motor_port_probe.rst", "brian.motors.motor_types.rst", "brian.runtime.rst", "brian.sensors.rst", "brian.sensors.EV3.rst", "brian.sensors.HiTec.rst", "brian.sensors.NXT.rst", "brian.sensors.sensor_port_probe.rst", "brian.settings.rst", "brian.uicontrol.rst", "index.rst", "modules.rst"], "titles": ["brian package", "brian.audio package", "brian.motors package", "brian.motors.motor_limits package", "brian.motors.motor_port_probe package", "brian.motors.motor_types package", "brian.runtime package", "brian.sensors package", "brian.sensors.EV3 package", "brian.sensors.HiTec package", "brian.sensors.NXT package", "brian.sensors.sensor_port_probe package", "brian.settings package", "brian.uicontrol package", "Welcome to Brian\u2019s documentation!", "Documentation"], "terms": {"audio": [0, 6, 15], "motor": [0, 15], "motor_limit": [0, 2], "motor_port_prob": [0, 2], "motor_typ": [0, 2], "submodul": [0, 15], "ev3largemotor": [0, 15], "ev3mediummotor": [0, 15], "motorport": [0, 4, 15], "movementend": [0, 15], "nxtmotor": [0, 15], "runtim": [0, 15], "sensor": [0, 2, 15], "ev3": [0, 4, 5, 7, 11], "colorsensorev3": [0, 7], "gyrosensorev3": [0, 7], "touchsensorev3": [0, 7], "ultrasonicsensorev3": [0, 7], "hitec": [0, 7], "gyrosensorhitec": [0, 7], "nxt": [0, 4, 7, 11], "lightsensornxt": [0, 7], "soundsensornxt": [0, 7], "touchsensornxt": [0, 7], "ultrasonicsensornxt": [0, 7], "sensor_port_prob": [0, 7], "brianbriancomm": [0, 15], "sensorport": [0, 8, 9, 10, 11, 15], "set": [0, 2, 4, 7, 8, 10, 11, 13, 15], "uicontrol": [0, 15], "uieventslisten": [0, 15], "packag": [14, 15], "index": [8, 14], "modul": [14, 15], "search": 14, "page": 14, "brian": 15, "subpackag": 15, "content": 15, "play_ton": [0, 1], "stop_ton": [0, 1], "brake": [0, 2], "close_motor": [0, 2], "coast": [0, 2], "current_angl": [0, 2], "current_spe": [0, 2], "current_torqu": [0, 2], "hold": [0, 2, 8], "is_connect": [0, 2, 4, 7, 11], "is_readi": [0, 2, 7], "is_stal": [0, 2], "limit": [0, 2, 3, 7], "movement_don": [0, 2], "reset_angl": [0, 2], "rotate_by_angl": [0, 2], "rotate_to_angl": [0, 2], "rotate_to_angle_without_speed_control": [0, 2], "run_at_spe": [0, 2], "run_at_voltag": [0, 2], "run_unregul": [0, 2], "wait_for_mov": [0, 2], "wait_until_readi": [0, 2, 7], "A": [0, 2, 3, 5, 8], "b": [0, 2, 8], "c": [0, 2], "d": [0, 2], "finish": [0, 2, 7], "timed_out": [0, 2], "motoralreadyclosederror": [0, 2], "motorexcept": [0, 2], "motorinitializationfailederror": [0, 2], "motorportalreadyinus": [0, 2, 4], "enable_turn_off_by_button": [0, 6], "power_off": [0, 2, 4, 5, 6], "reboot_brian": [0, 6], "avail": [0, 2, 3, 5, 7], "read": [0, 4, 7, 8, 11], "write": [0, 7], "close_sensor": [0, 7, 8, 9, 10], "reboot": [0, 6, 7, 8, 11], "s1": [0, 7], "s2": [0, 7], "s3": [0, 7], "s4": [0, 7], "sensoralreadyclosederror": [0, 7], "sensorexcept": [0, 7], "sensorisnotreadyerror": [0, 7, 8, 9, 10], "sensorportalreadyinus": [0, 7, 11], "are_os_button_sounds_en": [0, 12], "are_os_button_sounds_pref": [0, 12], "enable_os_button_sound": [0, 12], "get_current_lcd_bright": [0, 12], "get_current_volum": [0, 12], "get_preferred_lcd_bright": [0, 12], "get_preferred_volum": [0, 12], "set_lcd_bright": [0, 12], "set_volum": [0, 12], "button": [0, 6, 8, 10, 13], "buttonev": [0, 13], "buttonsev": [0, 13], "knob": [0, 13], "knobev": [0, 13], "any_button": [0, 13], "any_button_incl_knob": [0, 13], "bottom_left_button": [0, 13], "bottom_right_button": [0, 13], "buttons_event_since_last": [0, 13], "knob_event_since_last": [0, 13], "top_left_button": [0, 13], "top_right_button": [0, 13], "buttonid": [0, 13], "bottom_left": [0, 13], "bottom_right": [0, 13], "top_left": [0, 13], "top_right": [0, 13], "ledbuttonanim": [0, 13], "off": [0, 6, 7, 8, 10, 11, 13], "select": [0, 11, 13], "standbi": [0, 13], "inherit": [0, 13], "ledcolor": [0, 13], "blue": [0, 8, 13], "green": [0, 8, 13], "red": [0, 8, 10, 13], "uieventslisteneralreadyclosederror": [0, 13], "enable_knob_rotation_anim": [0, 13], "set_button_l": [0, 13], "tone": 1, "int": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13], "duration_m": 1, "plai": 1, "sine": 1, "output": [1, 5], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 13], "method": [1, 4, 8, 11], "return": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "instantli": 1, "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "background": 1, "paramet": [1, 2, 4, 5, 7, 8, 10, 12, 13], "frequenc": 1, "hz": 1, "how": [1, 2, 5, 7, 8], "long": [1, 2], "should": [1, 6, 8, 10], "last": [1, 2, 7, 8, 10, 11, 13], "If": [1, 2, 6, 7, 8, 9, 10, 13], "becaus": 1, "previou": [1, 13], "call": [1, 2, 4, 7, 8, 10, 11, 13], "stop": [1, 2], "earli": [1, 2], "motorlimit": [2, 3], "acceler": [2, 3], "battery_pow": [2, 3], "torqu": [2, 3, 5], "unlimited_acceler": [2, 3], "unlimited_pow": [2, 3], "unlimited_torqu": [2, 3], "autodetect": [2, 4, 7, 11], "device_class": [2, 4, 5], "device_typ": [2, 4, 5], "motorportprob": [2, 4], "auto_detect": [2, 4, 7, 11], "is_motor_api_handler_regist": [2, 4], "port_mod": [2, 4], "portmod": [2, 4, 5], "analog_motor": [2, 4], "autoid_onli": [2, 4], "probe_motor": [2, 4], "probe_motor_with_port_mode_hint": [2, 4], "deviceclass": [2, 4, 5], "error": [2, 5, 7, 8, 11], "ev3_analog_motor": [2, 5], "ev3_uart_devic": [2, 5], "none": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13], "devicetyp": [2, 4, 5], "ev3_medium_motor": [2, 5], "nxt_ev3_large_motor": [2, 5], "unknown": [2, 5], "motortyp": [2, 5], "defaultconst": [2, 5], "identif": [2, 5], "default_acceleration_limit": [2, 5], "default_const": [2, 5], "name": [2, 4, 5, 7, 8, 11, 13], "class": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13], "port": [2, 4, 6, 7, 8, 9, 10, 11], "base": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13], "manag": [2, 3], "control": [2, 5], "oper": [2, 7, 11], "object": [2, 3, 4, 5, 7, 8, 11, 13], "passiv": [2, 4, 11], "short": [2, 7], "wind": [2, 5], "releas": [2, 8, 10, 13], "other": [2, 7, 8, 11], "us": [2, 4, 5, 6, 7, 8, 10, 11, 13], "let": 2, "spin": [2, 8], "freeli": 2, "float": [2, 5, 10, 11, 12], "queri": [2, 3], "current": [2, 4, 5, 11, 12], "angl": [2, 7, 8], "axl": [2, 3], "degre": [2, 3, 5, 8, 9], "rotat": [2, 13], "speed": [2, 3, 5, 7, 8, 9, 11], "second": [2, 3, 6, 8, 9], "estim": [2, 5], "milli": [2, 3], "newton": [2, 3], "meter": [2, 3], "activ": [2, 8, 11], "posit": [2, 5, 8], "stai": 2, "bool": [2, 4, 6, 7, 8, 10, 11, 12, 13], "check": [2, 8], "someth": [2, 11], "connect": [2, 4, 5, 6, 7, 8, 11], "true": [2, 6, 7, 8, 10, 13], "non": 2, "empti": 2, "wa": [2, 8, 10, 12, 13], "detect": [2, 4, 5, 8, 11], "fals": [2, 6, 7, 8, 10, 13], "otherwis": [2, 7, 8, 10], "correct": [2, 5, 7, 8], "readi": [2, 7, 8, 9, 10], "test": 2, "done": 2, "intern": [2, 5, 6, 11], "alwai": 2, "type": [2, 4, 5, 7, 8, 11, 13], "stall": 2, "exceed": 2, "some": [2, 7, 8, 11], "properti": [2, 3, 4, 5, 11], "configur": [2, 3, 5], "variou": [2, 5], "can": [2, 4, 5, 6, 7, 8, 9, 10, 11], "what": [2, 5, 11], "initi": [2, 4, 7, 11], "default": [2, 5, 6, 7, 13], "whether": [2, 10, 12, 13], "invok": 2, "command": 2, "ha": [2, 5, 8, 11], "complet": 2, "reach": 2, "goal": 2, "maneuv": 2, "had": 2, "interrupt": 2, "e": [2, 4, 7, 11], "g": [2, 4, 7, 11], "unplug": 2, "still": [2, 6], "move": [2, 5], "new_valu": 2, "0": [2, 4, 5, 7, 8, 10, 11, 12, 13], "accumul": 2, "provid": [2, 4, 5, 6, 7, 8, 10], "assum": 2, "start": [2, 4, 5, 7, 8, 11, 13], "valu": [2, 4, 5, 7, 8, 10, 11, 12, 13], "newvalu": 2, "new": [2, 8], "timeout": [2, 7, 8, 10, 13], "turn": [2, 6, 7, 8, 11, 13], "rel": 2, "per": [2, 3, 5, 7, 8, 9, 10], "neg": [2, 7, 8, 10, 13], "absolut": 2, "wait": [2, 7, 8, 10, 13], "millisecond": [2, 7, 8, 10, 13], "zero": [2, 5, 8], "function": [2, 6, 7, 8, 9, 10, 13], "immedi": 2, "expir": 2, "end": [2, 8], "success": [2, 7, 8, 10, 13], "why": 2, "try": [2, 4, 7, 11, 13], "get": [2, 8], "fast": [2, 11], "possibl": 2, "specifi": [2, 5, 11], "ignor": [2, 6], "ani": [2, 4, 6, 7, 8, 9, 10, 11, 13], "you": [2, 4, 8, 11], "must": [2, 4, 5, 8], "yourself": 2, "period": [2, 7], "deg_per_sec": 2, "run": [2, 6], "constant": [2, 5, 7, 8, 11, 13], "desir": [2, 8, 10, 13], "volt": 2, "given": [2, 4, 5, 7, 8, 9, 10, 11, 13], "voltag": [2, 5], "rang": [2, 8, 9, 10, 12, 13], "batteri": [2, 3, 6], "cca": 2, "8v": 2, "The": [2, 4, 5, 6, 7, 8, 11, 12, 13], "maximum": [2, 3, 7, 8, 10, 11, 12, 13], "accept": 2, "12v": 2, "fraction": 2, "between": [2, 7, 8], "1": [2, 4, 5, 7, 8, 10, 11, 12, 13], "determin": 2, "duti": [2, 5], "cycl": [2, 5], "timeout_m": [2, 7, 8, 10, 13], "until": [2, 7], "block": [2, 7, 8, 10, 13], "number": [2, 5, 7, 8, 10, 13], "indefinit": [2, 7, 8, 10, 13], "ran": [2, 7, 8, 10, 13], "out": [2, 7, 8, 10, 13], "qualnam": [2, 4, 5, 7, 8, 11, 13], "boundari": [2, 4, 5, 7, 8, 11, 13], "enum": [2, 4, 5, 7, 8, 11, 13], "2": [2, 4, 5, 7, 8, 11, 13], "3": [2, 5, 7, 8, 11, 13], "reason": [2, 7], "movement": 2, "time": [2, 4, 7, 8, 9, 10, 11], "except": [2, 7, 8, 10, 13], "thrown": [2, 7, 13], "when": [2, 4, 5, 6, 7, 8, 11, 13], "access": [2, 7, 8, 10, 13], "close": [2, 7, 13], "fail": [2, 8], "dure": [2, 7, 8], "innit": 2, "regist": [2, 4, 7, 8, 9, 10, 11], "probe": [2, 4, 7, 11], "mode": [2, 4, 7, 8, 10, 11], "alreadi": [2, 4, 7, 11], "squar": 3, "power": [3, 6, 7, 8, 11], "draw": 3, "consumpt": 3, "watt": 3, "appli": [3, 7, 12], "disabl": [3, 4, 6, 12], "ramp": 3, "devic": [4, 5], "more": [4, 5, 7, 8, 11], "detail": [4, 5, 8], "state": [4, 5, 7, 8, 9, 10, 11, 13], "latest": [4, 11], "onli": [4, 5, 6, 7, 8, 11, 12, 13], "inform": [4, 11], "about": [4, 7, 8, 11], "regardless": [4, 11], "handler": [4, 7, 11], "usag": [4, 11], "hint": [4, 11], "It": [4, 6, 8, 9, 10, 11], "request": [4, 6, 11, 13], "specif": [4, 8, 10, 11, 13], "mai": [4, 11], "softwar": [4, 11], "protocol": [4, 11], "over": [4, 8, 11], "bu": [4, 11], "uart": [4, 11], "interfac": [4, 11], "expect": [4, 11], "extract": [4, 11], "exampl": [4, 7, 8, 11], "support": [4, 11], "behavior": [4, 13], "target": [4, 5, 13], "manual": [4, 8], "rais": [4, 7, 8, 9, 10, 11], "creat": [4, 8], "8": 5, "7": [5, 8, 11], "loop": 5, "ar": [5, 6, 7, 8, 12, 13], "typic": 5, "chang": [5, 7, 8, 13], "much": 5, "implement": [5, 11], "two": [5, 6, 7, 8], "parallel": 5, "form": 5, "freedom": 5, "pi": 5, "cascad": 5, "p": 5, "http": 5, "www": 5, "mathwork": 5, "com": 5, "help": 5, "ug": 5, "dof": 5, "pid": 5, "html": 5, "positionkp": 5, "proport": 5, "its": [5, 7, 8, 9, 10], "tick": 5, "": [5, 6, 8, 10, 11], "positiontolerancetick": 5, "toler": 5, "up": [5, 7, 8, 11], "deviat": 5, "need": [5, 6], "medium": [5, 13], "speedbeta": 5, "setpoint": 5, "weight": 5, "branch": 5, "see": [5, 8], "speedki": 5, "integr": 5, "speedkp": 5, "linear": 5, "dynam": 5, "model": 5, "b_nmperradpersec": 5, "friction": 5, "n": 5, "m": 5, "rad": 5, "sec": 5, "cp_farad": 5, "capac": 5, "emi": 5, "elimin": 5, "capacitor": 5, "across": 5, "termin": 5, "farad": 5, "kb_vperradpersec": 5, "v": 5, "kt_nmpera": 5, "l_henri": 5, "armatur": 5, "induct": 5, "henri": 5, "r_ohm": 5, "resist": 5, "ohm": 5, "udeadzone_volt": 5, "make": 5, "ticksperrevolut": 5, "encod": 5, "one": [5, 7, 8, 9, 10, 12], "revolut": 5, "observ": 5, "addit": [5, 7, 8, 11], "from": [5, 7, 8, 10, 13], "h": 5, "bridg": 5, "measur": [5, 8, 9, 10, 11], "These": [5, 13], "equal": 5, "pwm": 5, "imposs": 5, "directli": [5, 8], "wai": [5, 6], "doe": [5, 8], "so": 5, "simul": 5, "respons": [5, 6], "predict": 5, "real": 5, "thei": [5, 8], "re": 5, "measurementweight_pct": 5, "step": 5, "give": [5, 7], "minimumpwmontime_pct": 5, "trust": 5, "least": 5, "track": 5, "inspir": 5, "figur": 5, "equat": 5, "6": [5, 8, 11], "sciencedirect": 5, "scienc": 5, "articl": 5, "pii": 5, "s2405896319326618": 5, "ki": 5, "kp": 5, "result": [5, 7, 8], "auto": 5, "report": [5, 8, 11], "id": 5, "str": [5, 7, 8, 11], "human": 5, "readabl": 5, "enabl": [6, 12, 13], "first": [6, 7, 8], "press": [6, 8, 10, 13], "left": 6, "togeth": 6, "right": 6, "send": [6, 7], "keyboardinterrupt": 6, "hard": 6, "abort": 6, "program": [6, 7, 8, 9, 10, 13], "watch": 6, "them": [6, 8], "fulli": [6, 13], "accord": 6, "programm": 6, "altern": 6, "shutdown": 6, "mechan": 6, "exit": 6, "stuck": [6, 8], "either": [6, 8], "eject": 6, "sd": 6, "card": 6, "forc": [6, 8, 11], "entir": [6, 7, 8, 9, 10], "brick": 6, "param": [6, 11, 12, 13], "pattern": 6, "via": [6, 7], "usb": 6, "partial": 6, "perform": [6, 8], "all": [6, 7, 13], "peripher": 6, "displai": 6, "shut": 6, "down": [6, 7, 8, 11], "charg": 6, "monitor": 6, "put": 6, "back": [6, 7, 8, 11], "main": [6, 12], "menu": [6, 12], "screen": 6, "color": [7, 8, 13], "rawrgb": [7, 8], "ambient_valu": [7, 8], "detected_color": [7, 8], "get_color_nam": [7, 8], "reflected_valu": [7, 8], "reflected_value_raw": [7, 8], "rgb_values_raw": [7, 8], "set_mod": [7, 8], "angle_and_spe": [7, 8], "set_zero_point": [7, 8], "speed_coars": [7, 8], "tilt_angl": [7, 8], "tilt_spe": [7, 8], "is_press": [7, 8, 10, 13], "wait_for_press": [7, 8, 10, 13], "wait_for_press_and_releas": [7, 8, 10, 13], "wait_for_releas": [7, 8, 10, 13], "distance_mm": [7, 8], "distance_tenths_of_inch": [7, 8], "is_other_us_detect": [7, 8], "last_single_shot_mm": [7, 8], "last_single_shot_tenths_of_inch": [7, 8], "trigger_single_shot_measurement_mm": [7, 8], "trigger_single_shot_measurement_tenths_of_inch": [7, 8], "light_valu": [7, 10], "light_value_raw": [7, 10], "set_led_on": [7, 10], "sound_intens": [7, 10], "sound_intensity_raw": [7, 10], "distance_cm": [7, 10], "analog_p1": [7, 11], "analog_p1_hack": [7, 11], "analog_p6": [7, 11], "analog_p6_hack": [7, 11], "i2c_100k": [7, 11], "i2c_400k": [7, 11], "i2c_9k6": [7, 11], "not_connect": [7, 11], "protocol_i2c_nxt_reg": [7, 11], "protocol_uart_ev3": [7, 11], "uart_115k": [7, 11], "uart_2400": [7, 11], "uart_9600": [7, 11], "uart_multi_brian_mast": [7, 11], "uart_multi_brian_slav": [7, 11], "sensorinfo": [7, 11], "mode_count": [7, 11], "mode_nam": [7, 11], "pct_max": [7, 11], "pct_min": [7, 11], "raw_max": [7, 11], "raw_min": [7, 11], "selected_mod": [7, 11], "sensor_type_cod": [7, 11], "sensor_type_nam": [7, 11], "si_max": [7, 11], "si_min": [7, 11], "unit_nam": [7, 11], "sensorportprob": [7, 11], "auto_detect_hint": [7, 11], "info": [7, 11], "is_sensor_api_handler_regist": [7, 11], "probe_sensor": [7, 11], "probe_sensor_with_autodetect_hint": [7, 11], "is_mast": 7, "expos": 7, "commun": 7, "automat": [7, 8, 9, 10, 13], "constructor": [7, 8, 9, 10], "un": [7, 8, 9, 10], "destructor": [7, 8, 9, 10], "There": [7, 8, 9, 10], "most": [7, 8, 9, 10, 11], "instanc": [7, 8, 9, 10], "byte": [7, 11], "size": 7, "data": 7, "incom": [7, 10], "mani": [7, 8], "copi": 7, "oserror": 7, "an": [7, 8, 11], "occur": 7, "br": 7, "code": [7, 8, 11], "ul": 7, "li": 7, "mp_eio": 7, "disconnect": 7, "messag": 7, "bytearrai": 7, "buffer": 7, "contain": [7, 11], "actual": [7, 11], "written": 7, "sensor_typ": 7, "deiniti": 7, "free": 7, "iff": 7, "process": [7, 8, 11], "indic": [7, 8, 10], "attempt": 7, "valid": 7, "invalid": 7, "yet": 7, "incompat": 7, "wrong": 7, "In": [7, 8, 11], "abov": 7, "case": [7, 8, 11], "next": [7, 8, 10, 13], "forcibli": [7, 8, 11], "100m": [7, 8, 11], "mostli": [7, 8, 11], "digit": [7, 8, 11], "boot": [7, 8, 11], "handshak": [7, 8, 11], "enter": 7, "propag": 7, "therefor": 7, "recommend": [7, 8, 10], "befor": [7, 8, 10], "4": [7, 8, 11, 13], "interact": [8, 9, 10], "also": [8, 9, 10], "unregist": [8, 9, 10], "colorsensor": 8, "self": 8, "black": 8, "brown": 8, "no_color": 8, "5": [8, 11], "white": 8, "yellow": 8, "ambient": 8, "color_detect": 8, "reflect": 8, "reflect_raw": 8, "rgb_raw": 8, "rgb": 8, "each": 8, "channel": 8, "1023": 8, "attribut": 8, "100": [8, 12], "light": [8, 10, 11], "intens": 8, "calibr": 8, "within": 8, "itself": [8, 11], "percent": [8, 11, 12], "correspond": [8, 10, 11], "discrimin": 8, "work": [8, 12], "poorli": 8, "your": 8, "instead": 8, "static": 8, "english": 8, "conveni": 8, "ui": 8, "log": 8, "surfac": 8, "raw": [8, 10, 11], "uncalibr": 8, "thu": 8, "scale": [8, 11], "shift": 8, "resolut": 8, "subscript": 8, "while": [8, 10], "mandatori": [8, 10], "prevent": [8, 10], "sensorisnotreadi": [8, 10], "gyro": [8, 9], "collect": 8, "pair": 8, "enumer": 8, "lookup": 8, "iter": 8, "know": 8, "member": 8, "have": [8, 11], "len": 8, "list": 8, "ad": [8, 11], "own": 8, "document": 8, "32768": 8, "tilt": 8, "32767": 8, "clockwis": [8, 13], "look": 8, "side": 8, "arrow": 8, "around": 8, "too": 8, "overflow": 8, "through": 8, "depend": 8, "manufactur": 8, "tupl": 8, "consist": 8, "integ": 8, "repres": [8, 11], "deg": 8, "angular": [8, 9], "500": [8, 9], "recalibr": 8, "keep": 8, "steadi": 8, "minim": 8, "drift": 8, "adjust": 8, "point": 8, "fix": 8, "1464": 8, "1535": 8, "lower": [8, 10], "wider": 8, "than": [8, 11, 12], "axi": 8, "present": 8, "older": 8, "date": 8, "opposit": 8, "cabl": 8, "jack": 8, "touch": [8, 10], "boolean": [8, 10], "Or": [8, 10], "event": [8, 10, 13], "caught": [8, 10, 13], "ultrason": [8, 10, 11], "detect_other_u": 8, "singleshot_mm": 8, "singleshot_tenths_of_inch": 8, "distanc": [8, 10], "mm": 8, "2550": 8, "continu": [8, 10], "magic": 8, "tenth": 8, "inch": 8, "1003": 8, "anoth": 8, "hear": 8, "been": 8, "trigger": 8, "loud": 8, "nois": 8, "clap": 8, "differ": 8, "To": 8, "onc": 8, "after": 8, "goe": 8, "sleep": 8, "produc": 8, "wave": 8, "handl": [8, 11, 13], "multipl": [8, 11], "same": 8, "avoid": 8, "interfer": 8, "singl": [8, 11], "shot": 8, "often": 8, "250m": 8, "anyth": 8, "400": 9, "led_on": 10, "led": [10, 13], "pass": 10, "previous": 10, "being": 10, "darkest": 10, "brightest": 10, "invert": 10, "mean": 10, "brighter": 10, "4095": 10, "sound": [10, 12], "quietest": 10, "loudest": 10, "louder": 10, "cm": 10, "255": [10, 11, 13], "p1": 11, "adc": 11, "think": 11, "p6": 11, "128": 11, "msb": 11, "flag": 11, "rest": 11, "3rd": 11, "parti": 11, "standard": 11, "i2c": 11, "11": 11, "bit": 11, "bang": 11, "cannot": 11, "faster": 11, "9600": 11, "64": 11, "19": 11, "17": 11, "9": 11, "115200": 11, "baud": 11, "41": 11, "57": 11, "slave": 11, "rx": 11, "tx": 11, "pin": 11, "swap": 11, "8char": 11, "string": 11, "like": 11, "39": 11, "count": 11, "gener": 11, "u": 11, "even": 11, "analog": 11, "blink": 11, "differenti": 11, "st": 11, "minimum": 11, "si": 11, "unit": 11, "hw": 11, "o": [12, 13], "click": 12, "mute": 12, "were": 12, "lcd": 12, "bright": [12, 13], "speaker": 12, "volum": 12, "percentag": 12, "clip": 12, "higher": 12, "last_button_ev": 13, "just_press": 13, "just_releas": 13, "wait_for_any_turn": 13, "wait_for_directional_turn": 13, "direct": 13, "counterclockwis": 13, "turn_delta": 13, "turned_to": 13, "reset": 13, "field": 13, "happen": 13, "sinc": 13, "anim": 13, "puls": 13, "level": 13, "high": 13, "low": 13, "system": 13, "compon": 13, "outsid": 13, "clamp": 13, "under": 13, "user": 13, "default_color_from_set": 13, "overrid": 13, "physbuttonoverlai": 13, "effect": 13, "unless": 13, "respect": 13, "unfil": 13}, "objects": {"": [[0, 0, 0, "-", "brian"]], "brian": [[1, 0, 0, "-", "audio"], [2, 0, 0, "-", "motors"], [6, 0, 0, "-", "runtime"], [7, 0, 0, "-", "sensors"], [12, 0, 0, "-", "settings"], [13, 0, 0, "-", "uicontrol"]], "brian.audio": [[1, 1, 1, "", "play_tone"], [1, 1, 1, "", "stop_tone"]], "brian.motors": [[2, 0, 0, "-", "EV3LargeMotor"], [2, 0, 0, "-", "EV3MediumMotor"], [2, 0, 0, "-", "Motor"], [2, 5, 1, "", "MotorAlreadyClosedError"], [2, 5, 1, "", "MotorException"], [2, 5, 1, "", "MotorInitializationFailedError"], [2, 0, 0, "-", "MotorPort"], [2, 5, 1, "", "MotorPortAlreadyInUse"], [2, 0, 0, "-", "MovementEnd"], [2, 0, 0, "-", "NXTMotor"], [3, 0, 0, "-", "motor_limits"], [4, 0, 0, "-", "motor_port_probe"], [5, 0, 0, "-", "motor_types"]], "brian.motors.EV3LargeMotor": [[2, 2, 1, "", "EV3LargeMotor"]], "brian.motors.EV3MediumMotor": [[2, 2, 1, "", "EV3MediumMotor"]], "brian.motors.Motor": [[2, 2, 1, "", "Motor"]], "brian.motors.Motor.Motor": [[2, 3, 1, "", "brake"], [2, 3, 1, "", "close_motor"], [2, 3, 1, "", "coast"], [2, 3, 1, "", "current_angle"], [2, 3, 1, "", "current_speed"], [2, 3, 1, "", "current_torque"], [2, 3, 1, "", "hold"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_ready"], [2, 3, 1, "", "is_stalled"], [2, 4, 1, "", "limits"], [2, 4, 1, "", "motor_type"], [2, 3, 1, "", "movement_done"], [2, 3, 1, "", "reset_angle"], [2, 3, 1, "", "rotate_by_angle"], [2, 3, 1, "", "rotate_to_angle"], [2, 3, 1, "", "rotate_to_angle_without_speed_control"], [2, 3, 1, "", "run_at_speed"], [2, 3, 1, "", "run_at_voltage"], [2, 3, 1, "", "run_unregulated"], [2, 3, 1, "", "wait_for_movement"], [2, 3, 1, "", "wait_until_ready"]], "brian.motors.MotorPort": [[2, 2, 1, "", "MotorPort"]], "brian.motors.MotorPort.MotorPort": [[2, 6, 1, "", "A"], [2, 6, 1, "", "B"], [2, 6, 1, "", "C"], [2, 6, 1, "", "D"]], "brian.motors.MovementEnd": [[2, 2, 1, "", "MovementEnd"]], "brian.motors.MovementEnd.MovementEnd": [[2, 6, 1, "", "FINISHED"], [2, 6, 1, "", "TIMED_OUT"]], "brian.motors.NXTMotor": [[2, 2, 1, "", "NXTMotor"]], "brian.motors.motor_limits": [[3, 2, 1, "", "MotorLimits"], [3, 7, 1, "", "UNLIMITED_ACCELERATION"], [3, 7, 1, "", "UNLIMITED_POWER"], [3, 7, 1, "", "UNLIMITED_TORQUE"]], "brian.motors.motor_limits.MotorLimits": [[3, 4, 1, "", "acceleration"], [3, 4, 1, "", "battery_power"], [3, 4, 1, "", "torque"]], "brian.motors.motor_port_probe": [[4, 2, 1, "", "AutoDetect"], [4, 2, 1, "", "MotorPortProbe"], [4, 2, 1, "", "PortMode"], [4, 1, 1, "", "probe_motor"], [4, 1, 1, "", "probe_motor_with_port_mode_hint"]], "brian.motors.motor_port_probe.AutoDetect": [[4, 4, 1, "", "device_class"], [4, 4, 1, "", "device_type"]], "brian.motors.motor_port_probe.MotorPortProbe": [[4, 6, 1, "", "auto_detect"], [4, 6, 1, "", "is_connected"], [4, 6, 1, "", "is_motor_api_handler_registered"], [4, 6, 1, "", "port_mode"]], "brian.motors.motor_port_probe.PortMode": [[4, 6, 1, "", "ANALOG_MOTOR"], [4, 6, 1, "", "AUTOID_ONLY"], [4, 6, 1, "", "POWER_OFF"]], "brian.motors.motor_types": [[5, 2, 1, "", "DeviceClass"], [5, 2, 1, "", "DeviceType"], [5, 2, 1, "", "MotorType"]], "brian.motors.motor_types.DeviceClass": [[5, 6, 1, "", "ERROR"], [5, 6, 1, "", "EV3_ANALOG_MOTOR"], [5, 6, 1, "", "EV3_UART_DEVICE"], [5, 6, 1, "", "NONE"]], "brian.motors.motor_types.DeviceType": [[5, 6, 1, "", "EV3_MEDIUM_MOTOR"], [5, 6, 1, "", "NXT_EV3_LARGE_MOTOR"], [5, 6, 1, "", "UNKNOWN"]], "brian.motors.motor_types.MotorType": [[5, 2, 1, "", "DefaultConstants"], [5, 2, 1, "", "Identification"], [5, 4, 1, "", "default_acceleration_limit"], [5, 4, 1, "", "default_constants"], [5, 4, 1, "", "identification"], [5, 4, 1, "", "name"]], "brian.motors.motor_types.MotorType.DefaultConstants": [[5, 2, 1, "", "Controller"], [5, 2, 1, "", "Motor"], [5, 2, 1, "", "Observer"], [5, 4, 1, "", "controller"], [5, 4, 1, "", "motor"], [5, 4, 1, "", "observer"]], "brian.motors.motor_types.MotorType.DefaultConstants.Controller": [[5, 4, 1, "", "positionKp"], [5, 4, 1, "", "positionToleranceTicks"], [5, 4, 1, "", "speedBeta"], [5, 4, 1, "", "speedKi"], [5, 4, 1, "", "speedKp"]], "brian.motors.motor_types.MotorType.DefaultConstants.Motor": [[5, 4, 1, "", "B_NmPerRadPerSec"], [5, 4, 1, "", "Cp_Farad"], [5, 4, 1, "", "Kb_VPerRadPerSec"], [5, 4, 1, "", "Kt_NmPerA"], [5, 4, 1, "", "L_Henry"], [5, 4, 1, "", "R_Ohm"], [5, 4, 1, "", "Udeadzone_Volts"], [5, 4, 1, "", "ticksPerRevolution"]], "brian.motors.motor_types.MotorType.DefaultConstants.Observer": [[5, 2, 1, "", "Current"], [5, 2, 1, "", "Speed"], [5, 4, 1, "", "current"], [5, 4, 1, "", "speed"]], "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Current": [[5, 4, 1, "", "measurementWeight_pct"], [5, 4, 1, "", "minimumPwmOnTime_pct"]], "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Speed": [[5, 4, 1, "", "Ki"], [5, 4, 1, "", "Kp"]], "brian.motors.motor_types.MotorType.Identification": [[5, 4, 1, "", "device_class"], [5, 4, 1, "", "device_type"]], "brian.runtime": [[6, 1, 1, "", "enable_turn_off_by_buttons"], [6, 1, 1, "", "power_off"], [6, 1, 1, "", "reboot_brian"]], "brian.sensors": [[7, 0, 0, "-", "BrianBrianComm"], [8, 0, 0, "-", "EV3"], [9, 0, 0, "-", "HiTec"], [10, 0, 0, "-", "NXT"], [7, 0, 0, "-", "Sensor"], [7, 5, 1, "", "SensorAlreadyClosedError"], [7, 5, 1, "", "SensorException"], [7, 5, 1, "", "SensorIsNotReadyError"], [7, 0, 0, "-", "SensorPort"], [7, 5, 1, "", "SensorPortAlreadyInUse"], [11, 0, 0, "-", "sensor_port_probe"]], "brian.sensors.BrianBrianComm": [[7, 2, 1, "", "BrianBrianComm"]], "brian.sensors.BrianBrianComm.BrianBrianComm": [[7, 3, 1, "", "available"], [7, 3, 1, "", "read"], [7, 3, 1, "", "write"]], "brian.sensors.EV3": [[8, 0, 0, "-", "ColorSensorEV3"], [8, 0, 0, "-", "GyroSensorEV3"], [8, 0, 0, "-", "TouchSensorEV3"], [8, 0, 0, "-", "UltrasonicSensorEV3"]], "brian.sensors.EV3.ColorSensorEV3": [[8, 2, 1, "", "ColorSensorEV3"]], "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3": [[8, 2, 1, "", "Color"], [8, 2, 1, "", "Mode"], [8, 2, 1, "", "RawRGB"], [8, 3, 1, "", "ambient_value"], [8, 3, 1, "", "detected_color"], [8, 3, 1, "", "get_color_name"], [8, 3, 1, "", "reflected_value"], [8, 3, 1, "", "reflected_value_raw"], [8, 3, 1, "", "rgb_values_raw"], [8, 3, 1, "", "set_mode"]], "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color": [[8, 6, 1, "", "BLACK"], [8, 6, 1, "", "BLUE"], [8, 6, 1, "", "BROWN"], [8, 6, 1, "", "GREEN"], [8, 6, 1, "", "NO_COLOR"], [8, 6, 1, "", "RED"], [8, 6, 1, "", "WHITE"], [8, 6, 1, "", "YELLOW"]], "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode": [[8, 6, 1, "", "AMBIENT"], [8, 6, 1, "", "COLOR_DETECT"], [8, 6, 1, "", "REFLECT"], [8, 6, 1, "", "REFLECT_RAW"], [8, 6, 1, "", "RGB_RAW"]], "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.RawRGB": [[8, 6, 1, "", "blue"], [8, 6, 1, "", "green"], [8, 6, 1, "", "red"]], "brian.sensors.EV3.GyroSensorEV3": [[8, 2, 1, "", "GyroSensorEV3"]], "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3": [[8, 2, 1, "", "Enum"], [8, 2, 1, "", "Mode"], [8, 3, 1, "", "angle"], [8, 3, 1, "", "angle_and_speed"], [8, 3, 1, "", "reboot"], [8, 3, 1, "", "set_mode"], [8, 3, 1, "", "set_zero_point"], [8, 3, 1, "", "speed"], [8, 3, 1, "", "speed_coarse"], [8, 3, 1, "", "tilt_angle"], [8, 3, 1, "", "tilt_speed"]], "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Enum": [[8, 6, 1, "", "name"], [8, 6, 1, "", "value"]], "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode": [[8, 6, 1, "", "ANGLE"], [8, 6, 1, "", "ANGLE_AND_SPEED"], [8, 6, 1, "", "SPEED"], [8, 6, 1, "", "SPEED_COARSE"], [8, 6, 1, "", "TILT_ANGLE"], [8, 6, 1, "", "TILT_SPEED"]], "brian.sensors.EV3.TouchSensorEV3": [[8, 2, 1, "", "TouchSensorEV3"]], "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3": [[8, 3, 1, "", "is_pressed"], [8, 3, 1, "", "wait_for_press"], [8, 3, 1, "", "wait_for_press_and_release"], [8, 3, 1, "", "wait_for_release"]], "brian.sensors.EV3.UltrasonicSensorEV3": [[8, 2, 1, "", "UltrasonicSensorEV3"]], "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3": [[8, 2, 1, "", "Mode"], [8, 3, 1, "", "distance_mm"], [8, 3, 1, "", "distance_tenths_of_inch"], [8, 3, 1, "", "is_other_us_detected"], [8, 3, 1, "", "last_single_shot_mm"], [8, 3, 1, "", "last_single_shot_tenths_of_inch"], [8, 3, 1, "", "set_mode"], [8, 3, 1, "", "trigger_single_shot_measurement_mm"], [8, 3, 1, "", "trigger_single_shot_measurement_tenths_of_inch"]], "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode": [[8, 6, 1, "", "DETECT_OTHER_US"], [8, 6, 1, "", "DISTANCE_MM"], [8, 6, 1, "", "DISTANCE_TENTHS_OF_INCH"], [8, 6, 1, "", "SINGLESHOT_MM"], [8, 6, 1, "", "SINGLESHOT_TENTHS_OF_INCH"]], "brian.sensors.HiTec": [[9, 0, 0, "-", "GyroSensorHiTec"]], "brian.sensors.HiTec.GyroSensorHiTec": [[9, 2, 1, "", "GyroSensorHiTec"]], "brian.sensors.HiTec.GyroSensorHiTec.GyroSensorHiTec": [[9, 3, 1, "", "speed"]], "brian.sensors.NXT": [[10, 0, 0, "-", "LightSensorNXT"], [10, 0, 0, "-", "SoundSensorNXT"], [10, 0, 0, "-", "TouchSensorNXT"], [10, 0, 0, "-", "UltrasonicSensorNXT"]], "brian.sensors.NXT.LightSensorNXT": [[10, 2, 1, "", "LightSensorNXT"]], "brian.sensors.NXT.LightSensorNXT.LightSensorNXT": [[10, 3, 1, "", "light_value"], [10, 3, 1, "", "light_value_raw"], [10, 3, 1, "", "set_led_on"]], "brian.sensors.NXT.SoundSensorNXT": [[10, 2, 1, "", "SoundSensorNXT"]], "brian.sensors.NXT.SoundSensorNXT.SoundSensorNXT": [[10, 3, 1, "", "sound_intensity"], [10, 3, 1, "", "sound_intensity_raw"]], "brian.sensors.NXT.TouchSensorNXT": [[10, 2, 1, "", "TouchSensorNXT"]], "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT": [[10, 3, 1, "", "is_pressed"], [10, 3, 1, "", "wait_for_press"], [10, 3, 1, "", "wait_for_press_and_release"], [10, 3, 1, "", "wait_for_release"]], "brian.sensors.NXT.UltrasonicSensorNXT": [[10, 2, 1, "", "UltrasonicSensorNXT"]], "brian.sensors.NXT.UltrasonicSensorNXT.UltrasonicSensorNXT": [[10, 3, 1, "", "distance_cm"]], "brian.sensors.Sensor": [[7, 2, 1, "", "Sensor"]], "brian.sensors.Sensor.Sensor": [[7, 3, 1, "", "close_sensor"], [7, 3, 1, "", "is_connected"], [7, 3, 1, "", "is_ready"], [7, 3, 1, "", "reboot"], [7, 3, 1, "", "wait_until_ready"]], "brian.sensors.SensorPort": [[7, 2, 1, "", "SensorPort"]], "brian.sensors.SensorPort.SensorPort": [[7, 6, 1, "", "S1"], [7, 6, 1, "", "S2"], [7, 6, 1, "", "S3"], [7, 6, 1, "", "S4"]], "brian.sensors.sensor_port_probe": [[11, 2, 1, "", "AutoDetect"], [11, 2, 1, "", "SensorInfo"], [11, 2, 1, "", "SensorPortProbe"], [11, 1, 1, "", "probe_sensor"], [11, 1, 1, "", "probe_sensor_with_autodetect_hint"], [11, 1, 1, "", "reboot"]], "brian.sensors.sensor_port_probe.AutoDetect": [[11, 6, 1, "", "ANALOG_P1"], [11, 6, 1, "", "ANALOG_P1_HACKER"], [11, 6, 1, "", "ANALOG_P6"], [11, 6, 1, "", "ANALOG_P6_HACKER"], [11, 6, 1, "", "ERROR"], [11, 6, 1, "", "I2C_100K"], [11, 6, 1, "", "I2C_400K"], [11, 6, 1, "", "I2C_9K6"], [11, 6, 1, "", "NOT_CONNECTED"], [11, 6, 1, "", "PROTOCOL_I2C_NXT_REG"], [11, 6, 1, "", "PROTOCOL_UART_EV3"], [11, 6, 1, "", "UART_115K"], [11, 6, 1, "", "UART_2400"], [11, 6, 1, "", "UART_9600"], [11, 6, 1, "", "UART_MULTI_BRIAN_MASTER"], [11, 6, 1, "", "UART_MULTI_BRIAN_SLAVE"]], "brian.sensors.sensor_port_probe.SensorInfo": [[11, 4, 1, "", "mode_count"], [11, 4, 1, "", "mode_name"], [11, 4, 1, "", "pct_max"], [11, 4, 1, "", "pct_min"], [11, 4, 1, "", "raw_max"], [11, 4, 1, "", "raw_min"], [11, 4, 1, "", "selected_mode"], [11, 4, 1, "", "sensor_type_code"], [11, 4, 1, "", "sensor_type_name"], [11, 4, 1, "", "si_max"], [11, 4, 1, "", "si_min"], [11, 4, 1, "", "unit_name"]], "brian.sensors.sensor_port_probe.SensorPortProbe": [[11, 6, 1, "", "auto_detect"], [11, 6, 1, "", "auto_detect_hint"], [11, 6, 1, "", "info"], [11, 6, 1, "", "is_connected"], [11, 6, 1, "", "is_sensor_api_handler_registered"]], "brian.settings": [[12, 1, 1, "", "are_os_button_sounds_enabled"], [12, 1, 1, "", "are_os_button_sounds_preferred"], [12, 1, 1, "", "enable_os_button_sounds"], [12, 1, 1, "", "get_current_lcd_brightness"], [12, 1, 1, "", "get_current_volume"], [12, 1, 1, "", "get_preferred_lcd_brightness"], [12, 1, 1, "", "get_preferred_volume"], [12, 1, 1, "", "set_lcd_brightness"], [12, 1, 1, "", "set_volume"]], "brian.uicontrol": [[13, 2, 1, "", "ButtonId"], [13, 2, 1, "", "LedButtonAnimation"], [13, 2, 1, "", "LedColor"], [13, 0, 0, "-", "UiEventsListener"], [13, 5, 1, "", "UiEventsListenerAlreadyClosedError"], [13, 1, 1, "", "enable_knob_rotation_animation"], [13, 1, 1, "", "set_button_led"]], "brian.uicontrol.ButtonId": [[13, 6, 1, "", "BOTTOM_LEFT"], [13, 6, 1, "", "BOTTOM_RIGHT"], [13, 6, 1, "", "KNOB"], [13, 6, 1, "", "TOP_LEFT"], [13, 6, 1, "", "TOP_RIGHT"]], "brian.uicontrol.LedButtonAnimation": [[13, 6, 1, "", "OFF"], [13, 6, 1, "", "SELECTABLE"], [13, 6, 1, "", "SELECTED"], [13, 6, 1, "", "STANDBY"], [13, 6, 1, "", "inherit"]], "brian.uicontrol.LedColor": [[13, 6, 1, "", "blue"], [13, 6, 1, "", "green"], [13, 6, 1, "", "red"]], "brian.uicontrol.UiEventsListener": [[13, 2, 1, "", "UiEventsListener"]], "brian.uicontrol.UiEventsListener.UiEventsListener": [[13, 2, 1, "", "Button"], [13, 2, 1, "", "ButtonEvent"], [13, 2, 1, "", "ButtonsEvent"], [13, 2, 1, "", "Knob"], [13, 2, 1, "", "KnobEvent"], [13, 6, 1, "", "any_button"], [13, 6, 1, "", "any_button_incl_knob"], [13, 6, 1, "", "bottom_left_button"], [13, 6, 1, "", "bottom_right_button"], [13, 3, 1, "", "buttons_event_since_last"], [13, 6, 1, "", "knob"], [13, 3, 1, "", "knob_event_since_last"], [13, 6, 1, "", "top_left_button"], [13, 6, 1, "", "top_right_button"]], "brian.uicontrol.UiEventsListener.UiEventsListener.Button": [[13, 6, 1, "", "last_button_event"], [13, 3, 1, "", "wait_for_press"], [13, 3, 1, "", "wait_for_press_and_release"], [13, 3, 1, "", "wait_for_release"]], "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonEvent": [[13, 6, 1, "", "is_pressed"], [13, 6, 1, "", "just_pressed"], [13, 6, 1, "", "just_released"]], "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent": [[13, 6, 1, "", "any_button"], [13, 6, 1, "", "any_button_incl_knob"], [13, 6, 1, "", "bottom_left"], [13, 6, 1, "", "bottom_right"], [13, 6, 1, "", "top_left"], [13, 6, 1, "", "top_right"]], "brian.uicontrol.UiEventsListener.UiEventsListener.Knob": [[13, 6, 1, "", "last_button_event"], [13, 3, 1, "", "wait_for_any_turn"], [13, 3, 1, "", "wait_for_directional_turn"]], "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent": [[13, 6, 1, "", "is_pressed"], [13, 6, 1, "", "just_pressed"], [13, 6, 1, "", "just_released"], [13, 6, 1, "", "turn_delta"], [13, 6, 1, "", "turned_to"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:attribute", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "data", "Python data"]}, "titleterms": {"brian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [0, 2, 7], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "audio": 1, "motor": [2, 3, 4, 5], "submodul": [2, 7, 8, 9, 10, 13], "ev3largemotor": 2, "ev3mediummotor": 2, "motorport": 2, "movementend": 2, "nxtmotor": 2, "motor_limit": 3, "motor_port_prob": 4, "motor_typ": 5, "runtim": 6, "sensor": [7, 8, 9, 10, 11], "brianbriancomm": 7, "sensorport": 7, "ev3": 8, "colorsensorev3": 8, "gyrosensorev3": 8, "touchsensorev3": 8, "ultrasonicsensorev3": 8, "hitec": 9, "gyrosensorhitec": 9, "nxt": 10, "lightsensornxt": 10, "soundsensornxt": 10, "touchsensornxt": 10, "ultrasonicsensornxt": 10, "sensor_port_prob": 11, "set": 12, "uicontrol": 13, "uieventslisten": 13, "welcom": 14, "": 14, "document": [14, 15], "indic": 14, "tabl": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to Brian\u2019s documentation!": [[14, "welcome-to-brian-s-documentation"]], "Contents:": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]], "Documentation": [[15, "documentation"]], "brian package": [[0, "brian-package"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [7, "subpackages"]], "Module contents": [[0, "module-brian"], [1, "module-brian.audio"], [2, "module-brian.motors"], [3, "module-brian.motors.motor_limits"], [4, "module-brian.motors.motor_port_probe"], [5, "module-brian.motors.motor_types"], [6, "module-brian.runtime"], [7, "module-brian.sensors"], [8, "module-brian.sensors.EV3"], [9, "module-brian.sensors.HiTec"], [10, "module-brian.sensors.NXT"], [11, "module-brian.sensors.sensor_port_probe"], [12, "module-brian.settings"], [13, "module-brian.uicontrol"]], "brian.audio package": [[1, "brian-audio-package"]], "brian.motors package": [[2, "brian-motors-package"]], "Submodules": [[2, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [13, "submodules"]], "brian.motors.EV3LargeMotor module": [[2, "module-brian.motors.EV3LargeMotor"]], "brian.motors.EV3MediumMotor module": [[2, "module-brian.motors.EV3MediumMotor"]], "brian.motors.Motor module": [[2, "module-brian.motors.Motor"]], "brian.motors.MotorPort module": [[2, "module-brian.motors.MotorPort"]], "brian.motors.MovementEnd module": [[2, "module-brian.motors.MovementEnd"]], "brian.motors.NXTMotor module": [[2, "module-brian.motors.NXTMotor"]], "brian.motors.motor_limits package": [[3, "brian-motors-motor-limits-package"]], "brian.motors.motor_port_probe package": [[4, "brian-motors-motor-port-probe-package"]], "brian.motors.motor_types package": [[5, "brian-motors-motor-types-package"]], "brian.runtime package": [[6, "brian-runtime-package"]], "brian.sensors package": [[7, "brian-sensors-package"]], "brian.sensors.BrianBrianComm module": [[7, "module-brian.sensors.BrianBrianComm"]], "brian.sensors.Sensor module": [[7, "module-brian.sensors.Sensor"]], "brian.sensors.SensorPort module": [[7, "module-brian.sensors.SensorPort"]], "brian.sensors.EV3 package": [[8, "brian-sensors-ev3-package"]], "brian.sensors.EV3.ColorSensorEV3 module": [[8, "module-brian.sensors.EV3.ColorSensorEV3"]], "brian.sensors.EV3.GyroSensorEV3 module": [[8, "module-brian.sensors.EV3.GyroSensorEV3"]], "brian.sensors.EV3.TouchSensorEV3 module": [[8, "module-brian.sensors.EV3.TouchSensorEV3"]], "brian.sensors.EV3.UltrasonicSensorEV3 module": [[8, "module-brian.sensors.EV3.UltrasonicSensorEV3"]], "brian.sensors.HiTec package": [[9, "brian-sensors-hitec-package"]], "brian.sensors.HiTec.GyroSensorHiTec module": [[9, "module-brian.sensors.HiTec.GyroSensorHiTec"]], "brian.sensors.NXT package": [[10, "brian-sensors-nxt-package"]], "brian.sensors.NXT.LightSensorNXT module": [[10, "module-brian.sensors.NXT.LightSensorNXT"]], "brian.sensors.NXT.SoundSensorNXT module": [[10, "module-brian.sensors.NXT.SoundSensorNXT"]], "brian.sensors.NXT.TouchSensorNXT module": [[10, "module-brian.sensors.NXT.TouchSensorNXT"]], "brian.sensors.NXT.UltrasonicSensorNXT module": [[10, "module-brian.sensors.NXT.UltrasonicSensorNXT"]], "brian.sensors.sensor_port_probe package": [[11, "brian-sensors-sensor-port-probe-package"]], "brian.settings package": [[12, "brian-settings-package"]], "brian.uicontrol package": [[13, "brian-uicontrol-package"]], "brian.uicontrol.UiEventsListener module": [[13, "module-brian.uicontrol.UiEventsListener"]]}, "indexentries": {"brian": [[0, "module-brian"]], "module": [[0, "module-brian"], [1, "module-brian.audio"], [2, "module-brian.motors"], [2, "module-brian.motors.EV3LargeMotor"], [2, "module-brian.motors.EV3MediumMotor"], [2, "module-brian.motors.Motor"], [2, "module-brian.motors.MotorPort"], [2, "module-brian.motors.MovementEnd"], [2, "module-brian.motors.NXTMotor"], [3, "module-brian.motors.motor_limits"], [4, "module-brian.motors.motor_port_probe"], [5, "module-brian.motors.motor_types"], [6, "module-brian.runtime"], [7, "module-brian.sensors"], [7, "module-brian.sensors.BrianBrianComm"], [7, "module-brian.sensors.Sensor"], [7, "module-brian.sensors.SensorPort"], [8, "module-brian.sensors.EV3"], [8, "module-brian.sensors.EV3.ColorSensorEV3"], [8, "module-brian.sensors.EV3.GyroSensorEV3"], [8, "module-brian.sensors.EV3.TouchSensorEV3"], [8, "module-brian.sensors.EV3.UltrasonicSensorEV3"], [9, "module-brian.sensors.HiTec"], [9, "module-brian.sensors.HiTec.GyroSensorHiTec"], [10, "module-brian.sensors.NXT"], [10, "module-brian.sensors.NXT.LightSensorNXT"], [10, "module-brian.sensors.NXT.SoundSensorNXT"], [10, "module-brian.sensors.NXT.TouchSensorNXT"], [10, "module-brian.sensors.NXT.UltrasonicSensorNXT"], [11, "module-brian.sensors.sensor_port_probe"], [12, "module-brian.settings"], [13, "module-brian.uicontrol"], [13, "module-brian.uicontrol.UiEventsListener"]], "brian.audio": [[1, "module-brian.audio"]], "play_tone() (in module brian.audio)": [[1, "brian.audio.play_tone"]], "stop_tone() (in module brian.audio)": [[1, "brian.audio.stop_tone"]], "a (brian.motors.motorport.motorport attribute)": [[2, "brian.motors.MotorPort.MotorPort.A"]], "b (brian.motors.motorport.motorport attribute)": [[2, "brian.motors.MotorPort.MotorPort.B"]], "c (brian.motors.motorport.motorport attribute)": [[2, "brian.motors.MotorPort.MotorPort.C"]], "d (brian.motors.motorport.motorport attribute)": [[2, "brian.motors.MotorPort.MotorPort.D"]], "ev3largemotor (class in brian.motors.ev3largemotor)": [[2, "brian.motors.EV3LargeMotor.EV3LargeMotor"]], "ev3mediummotor (class in brian.motors.ev3mediummotor)": [[2, "brian.motors.EV3MediumMotor.EV3MediumMotor"]], "finished (brian.motors.movementend.movementend attribute)": [[2, "brian.motors.MovementEnd.MovementEnd.FINISHED"]], "motor (class in brian.motors.motor)": [[2, "brian.motors.Motor.Motor"]], "motoralreadyclosederror": [[2, "brian.motors.MotorAlreadyClosedError"]], "motorexception": [[2, "brian.motors.MotorException"]], "motorinitializationfailederror": [[2, "brian.motors.MotorInitializationFailedError"]], "motorport (class in brian.motors.motorport)": [[2, "brian.motors.MotorPort.MotorPort"]], "motorportalreadyinuse": [[2, "brian.motors.MotorPortAlreadyInUse"]], "movementend (class in brian.motors.movementend)": [[2, "brian.motors.MovementEnd.MovementEnd"]], "nxtmotor (class in brian.motors.nxtmotor)": [[2, "brian.motors.NXTMotor.NXTMotor"]], "timed_out (brian.motors.movementend.movementend attribute)": [[2, "brian.motors.MovementEnd.MovementEnd.TIMED_OUT"]], "brake() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.brake"]], "brian.motors": [[2, "module-brian.motors"]], "brian.motors.ev3largemotor": [[2, "module-brian.motors.EV3LargeMotor"]], "brian.motors.ev3mediummotor": [[2, "module-brian.motors.EV3MediumMotor"]], "brian.motors.motor": [[2, "module-brian.motors.Motor"]], "brian.motors.motorport": [[2, "module-brian.motors.MotorPort"]], "brian.motors.movementend": [[2, "module-brian.motors.MovementEnd"]], "brian.motors.nxtmotor": [[2, "module-brian.motors.NXTMotor"]], "close_motor() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.close_motor"]], "coast() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.coast"]], "current_angle() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.current_angle"]], "current_speed() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.current_speed"]], "current_torque() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.current_torque"]], "hold() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.hold"]], "is_connected() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.is_connected"]], "is_ready() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.is_ready"]], "is_stalled() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.is_stalled"]], "limits (brian.motors.motor.motor property)": [[2, "brian.motors.Motor.Motor.limits"]], "motor_type (brian.motors.motor.motor property)": [[2, "brian.motors.Motor.Motor.motor_type"]], "movement_done() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.movement_done"]], "reset_angle() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.reset_angle"]], "rotate_by_angle() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.rotate_by_angle"]], "rotate_to_angle() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.rotate_to_angle"]], "rotate_to_angle_without_speed_control() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.rotate_to_angle_without_speed_control"]], "run_at_speed() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.run_at_speed"]], "run_at_voltage() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.run_at_voltage"]], "run_unregulated() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.run_unregulated"]], "wait_for_movement() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.wait_for_movement"]], "wait_until_ready() (brian.motors.motor.motor method)": [[2, "brian.motors.Motor.Motor.wait_until_ready"]], "motorlimits (class in brian.motors.motor_limits)": [[3, "brian.motors.motor_limits.MotorLimits"]], "unlimited_acceleration (in module brian.motors.motor_limits)": [[3, "brian.motors.motor_limits.UNLIMITED_ACCELERATION"]], "unlimited_power (in module brian.motors.motor_limits)": [[3, "brian.motors.motor_limits.UNLIMITED_POWER"]], "unlimited_torque (in module brian.motors.motor_limits)": [[3, "brian.motors.motor_limits.UNLIMITED_TORQUE"]], "acceleration (brian.motors.motor_limits.motorlimits property)": [[3, "brian.motors.motor_limits.MotorLimits.acceleration"]], "battery_power (brian.motors.motor_limits.motorlimits property)": [[3, "brian.motors.motor_limits.MotorLimits.battery_power"]], "brian.motors.motor_limits": [[3, "module-brian.motors.motor_limits"]], "torque (brian.motors.motor_limits.motorlimits property)": [[3, "brian.motors.motor_limits.MotorLimits.torque"]], "analog_motor (brian.motors.motor_port_probe.portmode attribute)": [[4, "brian.motors.motor_port_probe.PortMode.ANALOG_MOTOR"]], "autoid_only (brian.motors.motor_port_probe.portmode attribute)": [[4, "brian.motors.motor_port_probe.PortMode.AUTOID_ONLY"]], "autodetect (class in brian.motors.motor_port_probe)": [[4, "brian.motors.motor_port_probe.AutoDetect"]], "motorportprobe (class in brian.motors.motor_port_probe)": [[4, "brian.motors.motor_port_probe.MotorPortProbe"]], "power_off (brian.motors.motor_port_probe.portmode attribute)": [[4, "brian.motors.motor_port_probe.PortMode.POWER_OFF"]], "portmode (class in brian.motors.motor_port_probe)": [[4, "brian.motors.motor_port_probe.PortMode"]], "auto_detect (brian.motors.motor_port_probe.motorportprobe attribute)": [[4, "brian.motors.motor_port_probe.MotorPortProbe.auto_detect"]], "brian.motors.motor_port_probe": [[4, "module-brian.motors.motor_port_probe"]], "device_class (brian.motors.motor_port_probe.autodetect property)": [[4, "brian.motors.motor_port_probe.AutoDetect.device_class"]], "device_type (brian.motors.motor_port_probe.autodetect property)": [[4, "brian.motors.motor_port_probe.AutoDetect.device_type"]], "is_connected (brian.motors.motor_port_probe.motorportprobe attribute)": [[4, "brian.motors.motor_port_probe.MotorPortProbe.is_connected"]], "is_motor_api_handler_registered (brian.motors.motor_port_probe.motorportprobe attribute)": [[4, "brian.motors.motor_port_probe.MotorPortProbe.is_motor_api_handler_registered"]], "port_mode (brian.motors.motor_port_probe.motorportprobe attribute)": [[4, "brian.motors.motor_port_probe.MotorPortProbe.port_mode"]], "probe_motor() (in module brian.motors.motor_port_probe)": [[4, "brian.motors.motor_port_probe.probe_motor"]], "probe_motor_with_port_mode_hint() (in module brian.motors.motor_port_probe)": [[4, "brian.motors.motor_port_probe.probe_motor_with_port_mode_hint"]], "b_nmperradpersec (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.B_NmPerRadPerSec"]], "cp_farad (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.Cp_Farad"]], "deviceclass (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.DeviceClass"]], "devicetype (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.DeviceType"]], "error (brian.motors.motor_types.deviceclass attribute)": [[5, "brian.motors.motor_types.DeviceClass.ERROR"]], "ev3_analog_motor (brian.motors.motor_types.deviceclass attribute)": [[5, "brian.motors.motor_types.DeviceClass.EV3_ANALOG_MOTOR"]], "ev3_medium_motor (brian.motors.motor_types.devicetype attribute)": [[5, "brian.motors.motor_types.DeviceType.EV3_MEDIUM_MOTOR"]], "ev3_uart_device (brian.motors.motor_types.deviceclass attribute)": [[5, "brian.motors.motor_types.DeviceClass.EV3_UART_DEVICE"]], "kb_vperradpersec (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.Kb_VPerRadPerSec"]], "ki (brian.motors.motor_types.motortype.defaultconstants.observer.speed property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Speed.Ki"]], "kp (brian.motors.motor_types.motortype.defaultconstants.observer.speed property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Speed.Kp"]], "kt_nmpera (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.Kt_NmPerA"]], "l_henry (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.L_Henry"]], "motortype (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType"]], "motortype.defaultconstants (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants"]], "motortype.defaultconstants.controller (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller"]], "motortype.defaultconstants.motor (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor"]], "motortype.defaultconstants.observer (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer"]], "motortype.defaultconstants.observer.current (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Current"]], "motortype.defaultconstants.observer.speed (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Speed"]], "motortype.identification (class in brian.motors.motor_types)": [[5, "brian.motors.motor_types.MotorType.Identification"]], "none (brian.motors.motor_types.deviceclass attribute)": [[5, "brian.motors.motor_types.DeviceClass.NONE"]], "nxt_ev3_large_motor (brian.motors.motor_types.devicetype attribute)": [[5, "brian.motors.motor_types.DeviceType.NXT_EV3_LARGE_MOTOR"]], "r_ohm (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.R_Ohm"]], "unknown (brian.motors.motor_types.devicetype attribute)": [[5, "brian.motors.motor_types.DeviceType.UNKNOWN"]], "udeadzone_volts (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.Udeadzone_Volts"]], "brian.motors.motor_types": [[5, "module-brian.motors.motor_types"]], "controller (brian.motors.motor_types.motortype.defaultconstants property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.controller"]], "current (brian.motors.motor_types.motortype.defaultconstants.observer property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.current"]], "default_acceleration_limit (brian.motors.motor_types.motortype property)": [[5, "brian.motors.motor_types.MotorType.default_acceleration_limit"]], "default_constants (brian.motors.motor_types.motortype property)": [[5, "brian.motors.motor_types.MotorType.default_constants"]], "device_class (brian.motors.motor_types.motortype.identification property)": [[5, "brian.motors.motor_types.MotorType.Identification.device_class"]], "device_type (brian.motors.motor_types.motortype.identification property)": [[5, "brian.motors.motor_types.MotorType.Identification.device_type"]], "identification (brian.motors.motor_types.motortype property)": [[5, "brian.motors.motor_types.MotorType.identification"]], "measurementweight_pct (brian.motors.motor_types.motortype.defaultconstants.observer.current property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Current.measurementWeight_pct"]], "minimumpwmontime_pct (brian.motors.motor_types.motortype.defaultconstants.observer.current property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.Current.minimumPwmOnTime_pct"]], "motor (brian.motors.motor_types.motortype.defaultconstants property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.motor"]], "name (brian.motors.motor_types.motortype property)": [[5, "brian.motors.motor_types.MotorType.name"]], "observer (brian.motors.motor_types.motortype.defaultconstants property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.observer"]], "positionkp (brian.motors.motor_types.motortype.defaultconstants.controller property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller.positionKp"]], "positiontoleranceticks (brian.motors.motor_types.motortype.defaultconstants.controller property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller.positionToleranceTicks"]], "speed (brian.motors.motor_types.motortype.defaultconstants.observer property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Observer.speed"]], "speedbeta (brian.motors.motor_types.motortype.defaultconstants.controller property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller.speedBeta"]], "speedki (brian.motors.motor_types.motortype.defaultconstants.controller property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller.speedKi"]], "speedkp (brian.motors.motor_types.motortype.defaultconstants.controller property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Controller.speedKp"]], "ticksperrevolution (brian.motors.motor_types.motortype.defaultconstants.motor property)": [[5, "brian.motors.motor_types.MotorType.DefaultConstants.Motor.ticksPerRevolution"]], "brian.runtime": [[6, "module-brian.runtime"]], "enable_turn_off_by_buttons() (in module brian.runtime)": [[6, "brian.runtime.enable_turn_off_by_buttons"]], "power_off() (in module brian.runtime)": [[6, "brian.runtime.power_off"]], "reboot_brian() (in module brian.runtime)": [[6, "brian.runtime.reboot_brian"]], "brianbriancomm (class in brian.sensors.brianbriancomm)": [[7, "brian.sensors.BrianBrianComm.BrianBrianComm"]], "s1 (brian.sensors.sensorport.sensorport attribute)": [[7, "brian.sensors.SensorPort.SensorPort.S1"]], "s2 (brian.sensors.sensorport.sensorport attribute)": [[7, "brian.sensors.SensorPort.SensorPort.S2"]], "s3 (brian.sensors.sensorport.sensorport attribute)": [[7, "brian.sensors.SensorPort.SensorPort.S3"]], "s4 (brian.sensors.sensorport.sensorport attribute)": [[7, "brian.sensors.SensorPort.SensorPort.S4"]], "sensor (class in brian.sensors.sensor)": [[7, "brian.sensors.Sensor.Sensor"]], "sensoralreadyclosederror": [[7, "brian.sensors.SensorAlreadyClosedError"]], "sensorexception": [[7, "brian.sensors.SensorException"]], "sensorisnotreadyerror": [[7, "brian.sensors.SensorIsNotReadyError"]], "sensorport (class in brian.sensors.sensorport)": [[7, "brian.sensors.SensorPort.SensorPort"]], "sensorportalreadyinuse": [[7, "brian.sensors.SensorPortAlreadyInUse"]], "available() (brian.sensors.brianbriancomm.brianbriancomm method)": [[7, "brian.sensors.BrianBrianComm.BrianBrianComm.available"]], "brian.sensors": [[7, "module-brian.sensors"]], "brian.sensors.brianbriancomm": [[7, "module-brian.sensors.BrianBrianComm"]], "brian.sensors.sensor": [[7, "module-brian.sensors.Sensor"]], "brian.sensors.sensorport": [[7, "module-brian.sensors.SensorPort"]], "close_sensor() (brian.sensors.sensor.sensor method)": [[7, "brian.sensors.Sensor.Sensor.close_sensor"]], "is_connected() (brian.sensors.sensor.sensor method)": [[7, "brian.sensors.Sensor.Sensor.is_connected"]], "is_ready() (brian.sensors.sensor.sensor method)": [[7, "brian.sensors.Sensor.Sensor.is_ready"]], "read() (brian.sensors.brianbriancomm.brianbriancomm method)": [[7, "brian.sensors.BrianBrianComm.BrianBrianComm.read"]], "reboot() (brian.sensors.sensor.sensor method)": [[7, "brian.sensors.Sensor.Sensor.reboot"]], "wait_until_ready() (brian.sensors.sensor.sensor method)": [[7, "brian.sensors.Sensor.Sensor.wait_until_ready"]], "write() (brian.sensors.brianbriancomm.brianbriancomm method)": [[7, "brian.sensors.BrianBrianComm.BrianBrianComm.write"]], "ambient (brian.sensors.ev3.colorsensorev3.colorsensorev3.mode attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode.AMBIENT"]], "angle (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.ANGLE"]], "angle_and_speed (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.ANGLE_AND_SPEED"]], "black (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.BLACK"]], "blue (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.BLUE"]], "brown (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.BROWN"]], "color_detect (brian.sensors.ev3.colorsensorev3.colorsensorev3.mode attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode.COLOR_DETECT"]], "colorsensorev3 (class in brian.sensors.ev3.colorsensorev3)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3"]], "colorsensorev3.color (class in brian.sensors.ev3.colorsensorev3)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color"]], "colorsensorev3.mode (class in brian.sensors.ev3.colorsensorev3)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode"]], "colorsensorev3.rawrgb (class in brian.sensors.ev3.colorsensorev3)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.RawRGB"]], "detect_other_us (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3.mode attribute)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode.DETECT_OTHER_US"]], "distance_mm (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3.mode attribute)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode.DISTANCE_MM"]], "distance_tenths_of_inch (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3.mode attribute)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode.DISTANCE_TENTHS_OF_INCH"]], "green (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.GREEN"]], "gyrosensorev3 (class in brian.sensors.ev3.gyrosensorev3)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3"]], "gyrosensorev3.enum (class in brian.sensors.ev3.gyrosensorev3)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Enum"]], "gyrosensorev3.mode (class in brian.sensors.ev3.gyrosensorev3)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode"]], "no_color (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.NO_COLOR"]], "red (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.RED"]], "reflect (brian.sensors.ev3.colorsensorev3.colorsensorev3.mode attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode.REFLECT"]], "reflect_raw (brian.sensors.ev3.colorsensorev3.colorsensorev3.mode attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode.REFLECT_RAW"]], "rgb_raw (brian.sensors.ev3.colorsensorev3.colorsensorev3.mode attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Mode.RGB_RAW"]], "singleshot_mm (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3.mode attribute)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode.SINGLESHOT_MM"]], "singleshot_tenths_of_inch (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3.mode attribute)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode.SINGLESHOT_TENTHS_OF_INCH"]], "speed (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.SPEED"]], "speed_coarse (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.SPEED_COARSE"]], "tilt_angle (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.TILT_ANGLE"]], "tilt_speed (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.mode attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Mode.TILT_SPEED"]], "touchsensorev3 (class in brian.sensors.ev3.touchsensorev3)": [[8, "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3"]], "ultrasonicsensorev3 (class in brian.sensors.ev3.ultrasonicsensorev3)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3"]], "ultrasonicsensorev3.mode (class in brian.sensors.ev3.ultrasonicsensorev3)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.Mode"]], "white (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.WHITE"]], "yellow (brian.sensors.ev3.colorsensorev3.colorsensorev3.color attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.Color.YELLOW"]], "ambient_value() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.ambient_value"]], "angle() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.angle"]], "angle_and_speed() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.angle_and_speed"]], "blue (brian.sensors.ev3.colorsensorev3.colorsensorev3.rawrgb attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.RawRGB.blue"]], "brian.sensors.ev3": [[8, "module-brian.sensors.EV3"]], "brian.sensors.ev3.colorsensorev3": [[8, "module-brian.sensors.EV3.ColorSensorEV3"]], "brian.sensors.ev3.gyrosensorev3": [[8, "module-brian.sensors.EV3.GyroSensorEV3"]], "brian.sensors.ev3.touchsensorev3": [[8, "module-brian.sensors.EV3.TouchSensorEV3"]], "brian.sensors.ev3.ultrasonicsensorev3": [[8, "module-brian.sensors.EV3.UltrasonicSensorEV3"]], "detected_color() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.detected_color"]], "distance_mm() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.distance_mm"]], "distance_tenths_of_inch() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.distance_tenths_of_inch"]], "get_color_name() (brian.sensors.ev3.colorsensorev3.colorsensorev3 static method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.get_color_name"]], "green (brian.sensors.ev3.colorsensorev3.colorsensorev3.rawrgb attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.RawRGB.green"]], "is_other_us_detected() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.is_other_us_detected"]], "is_pressed() (brian.sensors.ev3.touchsensorev3.touchsensorev3 method)": [[8, "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3.is_pressed"]], "last_single_shot_mm() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.last_single_shot_mm"]], "last_single_shot_tenths_of_inch() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.last_single_shot_tenths_of_inch"]], "name (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.enum attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Enum.name"]], "reboot() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.reboot"]], "red (brian.sensors.ev3.colorsensorev3.colorsensorev3.rawrgb attribute)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.RawRGB.red"]], "reflected_value() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.reflected_value"]], "reflected_value_raw() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.reflected_value_raw"]], "rgb_values_raw() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.rgb_values_raw"]], "set_mode() (brian.sensors.ev3.colorsensorev3.colorsensorev3 method)": [[8, "brian.sensors.EV3.ColorSensorEV3.ColorSensorEV3.set_mode"]], "set_mode() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.set_mode"]], "set_mode() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.set_mode"]], "set_zero_point() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.set_zero_point"]], "speed() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.speed"]], "speed_coarse() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.speed_coarse"]], "tilt_angle() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.tilt_angle"]], "tilt_speed() (brian.sensors.ev3.gyrosensorev3.gyrosensorev3 method)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.tilt_speed"]], "trigger_single_shot_measurement_mm() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.trigger_single_shot_measurement_mm"]], "trigger_single_shot_measurement_tenths_of_inch() (brian.sensors.ev3.ultrasonicsensorev3.ultrasonicsensorev3 method)": [[8, "brian.sensors.EV3.UltrasonicSensorEV3.UltrasonicSensorEV3.trigger_single_shot_measurement_tenths_of_inch"]], "value (brian.sensors.ev3.gyrosensorev3.gyrosensorev3.enum attribute)": [[8, "brian.sensors.EV3.GyroSensorEV3.GyroSensorEV3.Enum.value"]], "wait_for_press() (brian.sensors.ev3.touchsensorev3.touchsensorev3 method)": [[8, "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3.wait_for_press"]], "wait_for_press_and_release() (brian.sensors.ev3.touchsensorev3.touchsensorev3 method)": [[8, "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3.wait_for_press_and_release"]], "wait_for_release() (brian.sensors.ev3.touchsensorev3.touchsensorev3 method)": [[8, "brian.sensors.EV3.TouchSensorEV3.TouchSensorEV3.wait_for_release"]], "gyrosensorhitec (class in brian.sensors.hitec.gyrosensorhitec)": [[9, "brian.sensors.HiTec.GyroSensorHiTec.GyroSensorHiTec"]], "brian.sensors.hitec": [[9, "module-brian.sensors.HiTec"]], "brian.sensors.hitec.gyrosensorhitec": [[9, "module-brian.sensors.HiTec.GyroSensorHiTec"]], "speed() (brian.sensors.hitec.gyrosensorhitec.gyrosensorhitec method)": [[9, "brian.sensors.HiTec.GyroSensorHiTec.GyroSensorHiTec.speed"]], "lightsensornxt (class in brian.sensors.nxt.lightsensornxt)": [[10, "brian.sensors.NXT.LightSensorNXT.LightSensorNXT"]], "soundsensornxt (class in brian.sensors.nxt.soundsensornxt)": [[10, "brian.sensors.NXT.SoundSensorNXT.SoundSensorNXT"]], "touchsensornxt (class in brian.sensors.nxt.touchsensornxt)": [[10, "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT"]], "ultrasonicsensornxt (class in brian.sensors.nxt.ultrasonicsensornxt)": [[10, "brian.sensors.NXT.UltrasonicSensorNXT.UltrasonicSensorNXT"]], "brian.sensors.nxt": [[10, "module-brian.sensors.NXT"]], "brian.sensors.nxt.lightsensornxt": [[10, "module-brian.sensors.NXT.LightSensorNXT"]], "brian.sensors.nxt.soundsensornxt": [[10, "module-brian.sensors.NXT.SoundSensorNXT"]], "brian.sensors.nxt.touchsensornxt": [[10, "module-brian.sensors.NXT.TouchSensorNXT"]], "brian.sensors.nxt.ultrasonicsensornxt": [[10, "module-brian.sensors.NXT.UltrasonicSensorNXT"]], "distance_cm() (brian.sensors.nxt.ultrasonicsensornxt.ultrasonicsensornxt method)": [[10, "brian.sensors.NXT.UltrasonicSensorNXT.UltrasonicSensorNXT.distance_cm"]], "is_pressed() (brian.sensors.nxt.touchsensornxt.touchsensornxt method)": [[10, "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT.is_pressed"]], "light_value() (brian.sensors.nxt.lightsensornxt.lightsensornxt method)": [[10, "brian.sensors.NXT.LightSensorNXT.LightSensorNXT.light_value"]], "light_value_raw() (brian.sensors.nxt.lightsensornxt.lightsensornxt method)": [[10, "brian.sensors.NXT.LightSensorNXT.LightSensorNXT.light_value_raw"]], "set_led_on() (brian.sensors.nxt.lightsensornxt.lightsensornxt method)": [[10, "brian.sensors.NXT.LightSensorNXT.LightSensorNXT.set_led_on"]], "sound_intensity() (brian.sensors.nxt.soundsensornxt.soundsensornxt method)": [[10, "brian.sensors.NXT.SoundSensorNXT.SoundSensorNXT.sound_intensity"]], "sound_intensity_raw() (brian.sensors.nxt.soundsensornxt.soundsensornxt method)": [[10, "brian.sensors.NXT.SoundSensorNXT.SoundSensorNXT.sound_intensity_raw"]], "wait_for_press() (brian.sensors.nxt.touchsensornxt.touchsensornxt method)": [[10, "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT.wait_for_press"]], "wait_for_press_and_release() (brian.sensors.nxt.touchsensornxt.touchsensornxt method)": [[10, "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT.wait_for_press_and_release"]], "wait_for_release() (brian.sensors.nxt.touchsensornxt.touchsensornxt method)": [[10, "brian.sensors.NXT.TouchSensorNXT.TouchSensorNXT.wait_for_release"]], "analog_p1 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.ANALOG_P1"]], "analog_p1_hacker (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.ANALOG_P1_HACKER"]], "analog_p6 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.ANALOG_P6"]], "analog_p6_hacker (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.ANALOG_P6_HACKER"]], "autodetect (class in brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.AutoDetect"]], "error (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.ERROR"]], "i2c_100k (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.I2C_100K"]], "i2c_400k (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.I2C_400K"]], "i2c_9k6 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.I2C_9K6"]], "not_connected (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.NOT_CONNECTED"]], "protocol_i2c_nxt_reg (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.PROTOCOL_I2C_NXT_REG"]], "protocol_uart_ev3 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.PROTOCOL_UART_EV3"]], "sensorinfo (class in brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.SensorInfo"]], "sensorportprobe (class in brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe"]], "uart_115k (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.UART_115K"]], "uart_2400 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.UART_2400"]], "uart_9600 (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.UART_9600"]], "uart_multi_brian_master (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.UART_MULTI_BRIAN_MASTER"]], "uart_multi_brian_slave (brian.sensors.sensor_port_probe.autodetect attribute)": [[11, "brian.sensors.sensor_port_probe.AutoDetect.UART_MULTI_BRIAN_SLAVE"]], "auto_detect (brian.sensors.sensor_port_probe.sensorportprobe attribute)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe.auto_detect"]], "auto_detect_hint (brian.sensors.sensor_port_probe.sensorportprobe attribute)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe.auto_detect_hint"]], "brian.sensors.sensor_port_probe": [[11, "module-brian.sensors.sensor_port_probe"]], "info (brian.sensors.sensor_port_probe.sensorportprobe attribute)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe.info"]], "is_connected (brian.sensors.sensor_port_probe.sensorportprobe attribute)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe.is_connected"]], "is_sensor_api_handler_registered (brian.sensors.sensor_port_probe.sensorportprobe attribute)": [[11, "brian.sensors.sensor_port_probe.SensorPortProbe.is_sensor_api_handler_registered"]], "mode_count (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.mode_count"]], "mode_name (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.mode_name"]], "pct_max (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.pct_max"]], "pct_min (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.pct_min"]], "probe_sensor() (in module brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.probe_sensor"]], "probe_sensor_with_autodetect_hint() (in module brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.probe_sensor_with_autodetect_hint"]], "raw_max (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.raw_max"]], "raw_min (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.raw_min"]], "reboot() (in module brian.sensors.sensor_port_probe)": [[11, "brian.sensors.sensor_port_probe.reboot"]], "selected_mode (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.selected_mode"]], "sensor_type_code (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.sensor_type_code"]], "sensor_type_name (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.sensor_type_name"]], "si_max (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.si_max"]], "si_min (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.si_min"]], "unit_name (brian.sensors.sensor_port_probe.sensorinfo property)": [[11, "brian.sensors.sensor_port_probe.SensorInfo.unit_name"]], "are_os_button_sounds_enabled() (in module brian.settings)": [[12, "brian.settings.are_os_button_sounds_enabled"]], "are_os_button_sounds_preferred() (in module brian.settings)": [[12, "brian.settings.are_os_button_sounds_preferred"]], "brian.settings": [[12, "module-brian.settings"]], "enable_os_button_sounds() (in module brian.settings)": [[12, "brian.settings.enable_os_button_sounds"]], "get_current_lcd_brightness() (in module brian.settings)": [[12, "brian.settings.get_current_lcd_brightness"]], "get_current_volume() (in module brian.settings)": [[12, "brian.settings.get_current_volume"]], "get_preferred_lcd_brightness() (in module brian.settings)": [[12, "brian.settings.get_preferred_lcd_brightness"]], "get_preferred_volume() (in module brian.settings)": [[12, "brian.settings.get_preferred_volume"]], "set_lcd_brightness() (in module brian.settings)": [[12, "brian.settings.set_lcd_brightness"]], "set_volume() (in module brian.settings)": [[12, "brian.settings.set_volume"]], "bottom_left (brian.uicontrol.buttonid attribute)": [[13, "brian.uicontrol.ButtonId.BOTTOM_LEFT"]], "bottom_right (brian.uicontrol.buttonid attribute)": [[13, "brian.uicontrol.ButtonId.BOTTOM_RIGHT"]], "buttonid (class in brian.uicontrol)": [[13, "brian.uicontrol.ButtonId"]], "knob (brian.uicontrol.buttonid attribute)": [[13, "brian.uicontrol.ButtonId.KNOB"]], "ledbuttonanimation (class in brian.uicontrol)": [[13, "brian.uicontrol.LedButtonAnimation"]], "ledcolor (class in brian.uicontrol)": [[13, "brian.uicontrol.LedColor"]], "off (brian.uicontrol.ledbuttonanimation attribute)": [[13, "brian.uicontrol.LedButtonAnimation.OFF"]], "selectable (brian.uicontrol.ledbuttonanimation attribute)": [[13, "brian.uicontrol.LedButtonAnimation.SELECTABLE"]], "selected (brian.uicontrol.ledbuttonanimation attribute)": [[13, "brian.uicontrol.LedButtonAnimation.SELECTED"]], "standby (brian.uicontrol.ledbuttonanimation attribute)": [[13, "brian.uicontrol.LedButtonAnimation.STANDBY"]], "top_left (brian.uicontrol.buttonid attribute)": [[13, "brian.uicontrol.ButtonId.TOP_LEFT"]], "top_right (brian.uicontrol.buttonid attribute)": [[13, "brian.uicontrol.ButtonId.TOP_RIGHT"]], "uieventslistener (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener"]], "uieventslistener.button (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Button"]], "uieventslistener.buttonevent (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonEvent"]], "uieventslistener.buttonsevent (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent"]], "uieventslistener.knob (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Knob"]], "uieventslistener.knobevent (class in brian.uicontrol.uieventslistener)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent"]], "uieventslisteneralreadyclosederror": [[13, "brian.uicontrol.UiEventsListenerAlreadyClosedError"]], "any_button (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.any_button"]], "any_button (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.any_button"]], "any_button_incl_knob (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.any_button_incl_knob"]], "any_button_incl_knob (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.any_button_incl_knob"]], "blue (brian.uicontrol.ledcolor attribute)": [[13, "brian.uicontrol.LedColor.blue"]], "bottom_left (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.bottom_left"]], "bottom_left_button (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.bottom_left_button"]], "bottom_right (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.bottom_right"]], "bottom_right_button (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.bottom_right_button"]], "brian.uicontrol": [[13, "module-brian.uicontrol"]], "brian.uicontrol.uieventslistener": [[13, "module-brian.uicontrol.UiEventsListener"]], "buttons_event_since_last() (brian.uicontrol.uieventslistener.uieventslistener method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.buttons_event_since_last"]], "enable_knob_rotation_animation() (in module brian.uicontrol)": [[13, "brian.uicontrol.enable_knob_rotation_animation"]], "green (brian.uicontrol.ledcolor attribute)": [[13, "brian.uicontrol.LedColor.green"]], "inherit (brian.uicontrol.ledbuttonanimation attribute)": [[13, "brian.uicontrol.LedButtonAnimation.inherit"]], "is_pressed (brian.uicontrol.uieventslistener.uieventslistener.buttonevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonEvent.is_pressed"]], "is_pressed (brian.uicontrol.uieventslistener.uieventslistener.knobevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent.is_pressed"]], "just_pressed (brian.uicontrol.uieventslistener.uieventslistener.buttonevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonEvent.just_pressed"]], "just_pressed (brian.uicontrol.uieventslistener.uieventslistener.knobevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent.just_pressed"]], "just_released (brian.uicontrol.uieventslistener.uieventslistener.buttonevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonEvent.just_released"]], "just_released (brian.uicontrol.uieventslistener.uieventslistener.knobevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent.just_released"]], "knob (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.knob"]], "knob_event_since_last() (brian.uicontrol.uieventslistener.uieventslistener method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.knob_event_since_last"]], "last_button_event (brian.uicontrol.uieventslistener.uieventslistener.button attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Button.last_button_event"]], "last_button_event (brian.uicontrol.uieventslistener.uieventslistener.knob attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Knob.last_button_event"]], "red (brian.uicontrol.ledcolor attribute)": [[13, "brian.uicontrol.LedColor.red"]], "set_button_led() (in module brian.uicontrol)": [[13, "brian.uicontrol.set_button_led"]], "top_left (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.top_left"]], "top_left_button (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.top_left_button"]], "top_right (brian.uicontrol.uieventslistener.uieventslistener.buttonsevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.ButtonsEvent.top_right"]], "top_right_button (brian.uicontrol.uieventslistener.uieventslistener attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.top_right_button"]], "turn_delta (brian.uicontrol.uieventslistener.uieventslistener.knobevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent.turn_delta"]], "turned_to (brian.uicontrol.uieventslistener.uieventslistener.knobevent attribute)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.KnobEvent.turned_to"]], "wait_for_any_turn() (brian.uicontrol.uieventslistener.uieventslistener.knob method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Knob.wait_for_any_turn"]], "wait_for_directional_turn() (brian.uicontrol.uieventslistener.uieventslistener.knob method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Knob.wait_for_directional_turn"]], "wait_for_press() (brian.uicontrol.uieventslistener.uieventslistener.button method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Button.wait_for_press"]], "wait_for_press_and_release() (brian.uicontrol.uieventslistener.uieventslistener.button method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Button.wait_for_press_and_release"]], "wait_for_release() (brian.uicontrol.uieventslistener.uieventslistener.button method)": [[13, "brian.uicontrol.UiEventsListener.UiEventsListener.Button.wait_for_release"]]}})